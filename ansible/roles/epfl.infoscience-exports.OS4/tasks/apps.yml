# PROD ONLY
- name: Django app
  when: >-
    openshift_namespace in ["svc0089p-infoscience"]
  # the diff with the next task definition is the removal of the initContainer
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        annotations:
          version: "{{ app_version }}"
        labels:
          app: "{{ app_name }}"
          version: "{{ app_version }}"
        name: "{{ deploy_name }}"
        namespace: "{{ openshift_namespace }}"
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: "{{ app_name }}"
        template:
          metadata:
            labels:
              app: "{{ app_name }}"
              deployment: "{{ deploy_name }}"
          spec:
            serviceAccountName: builder-for-quay
            containers:
              - name: pod-infoscience-exports
                envFrom:
                  - configMapRef:
                      name: "{{ config_maps_name }}"
                  - secretRef:
                      name: "{{ secret_name }}"
                image: "{{ app_image_source }}"
                imagePullPolicy: Always
                ports:
                  - containerPort: 3000
                    protocol: TCP
                volumeMounts:
                  - name: "{{ volume_name_logs }}"
                    mountPath: /var/log/django
                    subPath: infoscience-exports
                resources:
                  requests:
                    memory: "256Mi"
                    cpu: "20m"
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            terminationGracePeriodSeconds: 30
            volumes:
              - name: "{{ volume_name_logs }}"
                persistentVolumeClaim:
                  claimName: "{{ volume_name_logs }}"

- name: Django app
  when: >-
    openshift_namespace in ["svc0089d-infoscience", "svc0089t-infoscience"]
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        annotations:
          version: "{{ app_version }}"
        labels:
          app: "{{ app_name }}"
          version: "{{ app_version }}"
        name: "{{ deploy_name }}"
        namespace: "{{ openshift_namespace }}"
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: "{{ app_name }}"
        template:
          metadata:
            labels:
              app: "{{ app_name }}"
              deployment: "{{ deploy_name }}"
          spec:
            serviceAccountName: builder-for-quay
            initContainers:
              - name: init-pod-infoscience-exports-migrate-db
                envFrom:
                  - configMapRef:
                      name: "{{ config_maps_name }}"
                  - secretRef:
                      name: "{{ secret_name }}"
                image: "{{ app_image_source }}"
                imagePullPolicy: Always
                volumeMounts:
                  - name: "{{ volume_name_logs }}"
                    mountPath: /var/log/django
                    subPath: infoscience-exports
                resources:
                  requests:
                    memory: "256Mi"
                    cpu: "10m"
                command: [ "python", "infoscience_exports/manage.py", "migrate", "--no-input" ]
            containers:
              - name: pod-infoscience-exports
                envFrom:
                  - configMapRef:
                      name: "{{ config_maps_name }}"
                  - secretRef:
                      name: "{{ secret_name }}"
                image: "{{ app_image_source }}"
                imagePullPolicy: Always
                ports:
                  - containerPort: 3000
                    protocol: TCP
                volumeMounts:
                  - name: "{{ volume_name_logs }}"
                    mountPath: /var/log/django
                    subPath: infoscience-exports
                resources:
                  requests:
                    memory: "256Mi"
                    cpu: "20m"
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            terminationGracePeriodSeconds: 30
            volumes:
              - name: "{{ volume_name_logs }}"
                persistentVolumeClaim:
                  claimName: "{{ volume_name_logs }}"

- name: Django app - Service
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ svc_name }}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{ app_name }}"
      spec:
        ports:
          - name: "http"
            port: 80
            protocol: TCP
            targetPort: 3000
        type: ClusterIP
        selector:
          app: "{{ app_name }}"
          deployment: "{{ deploy_name }}"

- name: Django app - Restart
  when: >-
    ('apps.restart' in ansible_run_tags)
  local_action:
    module: shell
    cmd: "oc rollout restart deployment/{{ deploy_name }} --namespace {{ openshift_namespace }}"
  tags: apps.restart
